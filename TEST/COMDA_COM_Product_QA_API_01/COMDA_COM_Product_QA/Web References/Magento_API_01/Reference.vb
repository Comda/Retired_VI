'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Magento_API_01
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Mage_Api_Model_Server_HandlerBinding", [Namespace]:="urn:Magento")>  _
    Partial Public Class MagentoService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private callOperationCompleted As System.Threading.SendOrPostCallback
        
        Private multiCallOperationCompleted As System.Threading.SendOrPostCallback
        
        Private endSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private loginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private startSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private resourcesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private globalFaultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private resourceFaultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.COMDA_COM_Product_QA_API_1.My.MySettings.Default.COMDA_COM_Product_QA_API_1_Magento_API_01_MagentoService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event callCompleted As callCompletedEventHandler
        
        '''<remarks/>
        Public Event multiCallCompleted As multiCallCompletedEventHandler
        
        '''<remarks/>
        Public Event endSessionCompleted As endSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event loginCompleted As loginCompletedEventHandler
        
        '''<remarks/>
        Public Event startSessionCompleted As startSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event resourcesCompleted As resourcesCompletedEventHandler
        
        '''<remarks/>
        Public Event globalFaultsCompleted As globalFaultsCompletedEventHandler
        
        '''<remarks/>
        Public Event resourceFaultsCompleted As resourceFaultsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function [call](ByVal sessionId As String, ByVal resourcePath As String, ByVal args As Object) As <System.Xml.Serialization.SoapElementAttribute("callReturn")> Object
            Dim results() As Object = Me.Invoke("call", New Object() {sessionId, resourcePath, args})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub callAsync(ByVal sessionId As String, ByVal resourcePath As String, ByVal args As Object)
            Me.callAsync(sessionId, resourcePath, args, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub callAsync(ByVal sessionId As String, ByVal resourcePath As String, ByVal args As Object, ByVal userState As Object)
            If (Me.callOperationCompleted Is Nothing) Then
                Me.callOperationCompleted = AddressOf Me.OncallOperationCompleted
            End If
            Me.InvokeAsync("call", New Object() {sessionId, resourcePath, args}, Me.callOperationCompleted, userState)
        End Sub
        
        Private Sub OncallOperationCompleted(ByVal arg As Object)
            If (Not (Me.callCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent callCompleted(Me, New callCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function multiCall(ByVal sessionId As String, ByVal calls() As Object, ByVal options As Object) As <System.Xml.Serialization.SoapElementAttribute("multiCallReturn")> Object()
            Dim results() As Object = Me.Invoke("multiCall", New Object() {sessionId, calls, options})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub multiCallAsync(ByVal sessionId As String, ByVal calls() As Object, ByVal options As Object)
            Me.multiCallAsync(sessionId, calls, options, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub multiCallAsync(ByVal sessionId As String, ByVal calls() As Object, ByVal options As Object, ByVal userState As Object)
            If (Me.multiCallOperationCompleted Is Nothing) Then
                Me.multiCallOperationCompleted = AddressOf Me.OnmultiCallOperationCompleted
            End If
            Me.InvokeAsync("multiCall", New Object() {sessionId, calls, options}, Me.multiCallOperationCompleted, userState)
        End Sub
        
        Private Sub OnmultiCallOperationCompleted(ByVal arg As Object)
            If (Not (Me.multiCallCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent multiCallCompleted(Me, New multiCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function endSession(ByVal sessionId As String) As <System.Xml.Serialization.SoapElementAttribute("endSessionReturn")> Boolean
            Dim results() As Object = Me.Invoke("endSession", New Object() {sessionId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub endSessionAsync(ByVal sessionId As String)
            Me.endSessionAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub endSessionAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.endSessionOperationCompleted Is Nothing) Then
                Me.endSessionOperationCompleted = AddressOf Me.OnendSessionOperationCompleted
            End If
            Me.InvokeAsync("endSession", New Object() {sessionId}, Me.endSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnendSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.endSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent endSessionCompleted(Me, New endSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function login(ByVal username As String, ByVal apiKey As String) As <System.Xml.Serialization.SoapElementAttribute("loginReturn")> String
            Dim results() As Object = Me.Invoke("login", New Object() {username, apiKey})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal username As String, ByVal apiKey As String)
            Me.loginAsync(username, apiKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal username As String, ByVal apiKey As String, ByVal userState As Object)
            If (Me.loginOperationCompleted Is Nothing) Then
                Me.loginOperationCompleted = AddressOf Me.OnloginOperationCompleted
            End If
            Me.InvokeAsync("login", New Object() {username, apiKey}, Me.loginOperationCompleted, userState)
        End Sub
        
        Private Sub OnloginOperationCompleted(ByVal arg As Object)
            If (Not (Me.loginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent loginCompleted(Me, New loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function startSession() As <System.Xml.Serialization.SoapElementAttribute("startSessionReturn")> String
            Dim results() As Object = Me.Invoke("startSession", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub startSessionAsync()
            Me.startSessionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub startSessionAsync(ByVal userState As Object)
            If (Me.startSessionOperationCompleted Is Nothing) Then
                Me.startSessionOperationCompleted = AddressOf Me.OnstartSessionOperationCompleted
            End If
            Me.InvokeAsync("startSession", New Object(-1) {}, Me.startSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnstartSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.startSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent startSessionCompleted(Me, New startSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function resources(ByVal sessionId As String) As <System.Xml.Serialization.SoapElementAttribute("resourcesReturn")> Object()
            Dim results() As Object = Me.Invoke("resources", New Object() {sessionId})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub resourcesAsync(ByVal sessionId As String)
            Me.resourcesAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub resourcesAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.resourcesOperationCompleted Is Nothing) Then
                Me.resourcesOperationCompleted = AddressOf Me.OnresourcesOperationCompleted
            End If
            Me.InvokeAsync("resources", New Object() {sessionId}, Me.resourcesOperationCompleted, userState)
        End Sub
        
        Private Sub OnresourcesOperationCompleted(ByVal arg As Object)
            If (Not (Me.resourcesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent resourcesCompleted(Me, New resourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function globalFaults(ByVal sessionId As String) As <System.Xml.Serialization.SoapElementAttribute("globalFaultsReturn")> Object()
            Dim results() As Object = Me.Invoke("globalFaults", New Object() {sessionId})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub globalFaultsAsync(ByVal sessionId As String)
            Me.globalFaultsAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub globalFaultsAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.globalFaultsOperationCompleted Is Nothing) Then
                Me.globalFaultsOperationCompleted = AddressOf Me.OnglobalFaultsOperationCompleted
            End If
            Me.InvokeAsync("globalFaults", New Object() {sessionId}, Me.globalFaultsOperationCompleted, userState)
        End Sub
        
        Private Sub OnglobalFaultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.globalFaultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent globalFaultsCompleted(Me, New globalFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_HandlerAction", RequestNamespace:="urn:Magento", ResponseNamespace:="urn:Magento")>  _
        Public Function resourceFaults(ByVal resourceName As String, ByVal sessionId As String) As <System.Xml.Serialization.SoapElementAttribute("resourceFaultsReturn")> Object()
            Dim results() As Object = Me.Invoke("resourceFaults", New Object() {resourceName, sessionId})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub resourceFaultsAsync(ByVal resourceName As String, ByVal sessionId As String)
            Me.resourceFaultsAsync(resourceName, sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub resourceFaultsAsync(ByVal resourceName As String, ByVal sessionId As String, ByVal userState As Object)
            If (Me.resourceFaultsOperationCompleted Is Nothing) Then
                Me.resourceFaultsOperationCompleted = AddressOf Me.OnresourceFaultsOperationCompleted
            End If
            Me.InvokeAsync("resourceFaults", New Object() {resourceName, sessionId}, Me.resourceFaultsOperationCompleted, userState)
        End Sub
        
        Private Sub OnresourceFaultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.resourceFaultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent resourceFaultsCompleted(Me, New resourceFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub callCompletedEventHandler(ByVal sender As Object, ByVal e As callCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class callCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub multiCallCompletedEventHandler(ByVal sender As Object, ByVal e As multiCallCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class multiCallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub endSessionCompletedEventHandler(ByVal sender As Object, ByVal e As endSessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class endSessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub loginCompletedEventHandler(ByVal sender As Object, ByVal e As loginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class loginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub startSessionCompletedEventHandler(ByVal sender As Object, ByVal e As startSessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class startSessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub resourcesCompletedEventHandler(ByVal sender As Object, ByVal e As resourcesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class resourcesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub globalFaultsCompletedEventHandler(ByVal sender As Object, ByVal e As globalFaultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class globalFaultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub resourceFaultsCompletedEventHandler(ByVal sender As Object, ByVal e As resourceFaultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class resourceFaultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
End Namespace
