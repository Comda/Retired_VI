'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace HIT_productData
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ProductControllerBinding", [Namespace]:="urn:ProductControllerwsdl"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProductId)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Subcategory)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SubcategoryId)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Category)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DeactivatedProduct)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ActiveProduct)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(CMProductDataResult)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProductSetupData)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProductColorData))>  _
    Partial Public Class ProductControllerService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getOutletProductListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLastModifiedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTopSellersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getColorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSetupChargesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductDataCMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInfoMultiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductSizesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductPackingDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductArtTemplatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getActiveProductsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isProductRushOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductsDeactivatedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCategoriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProductsBySubcategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PODO.My.MySettings.Default.PODO_HIT_productData_ProductControllerService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getOutletProductListCompleted As getOutletProductListCompletedEventHandler
        
        '''<remarks/>
        Public Event getInfoCompleted As getInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getLastModifiedCompleted As getLastModifiedCompletedEventHandler
        
        '''<remarks/>
        Public Event getTopSellersCompleted As getTopSellersCompletedEventHandler
        
        '''<remarks/>
        Public Event getColorsCompleted As getColorsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSetupChargesCompleted As getSetupChargesCompletedEventHandler
        
        '''<remarks/>
        Public Event getImagesCompleted As getImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductDataCMCompleted As getProductDataCMCompletedEventHandler
        
        '''<remarks/>
        Public Event getInfoMultiCompleted As getInfoMultiCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductSizesCompleted As getProductSizesCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductPackingDataCompleted As getProductPackingDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductArtTemplatesCompleted As getProductArtTemplatesCompletedEventHandler
        
        '''<remarks/>
        Public Event getActiveProductsCompleted As getActiveProductsCompletedEventHandler
        
        '''<remarks/>
        Public Event isProductRushCompleted As isProductRushCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductsDeactivatedCompleted As getProductsDeactivatedCompletedEventHandler
        
        '''<remarks/>
        Public Event getCategoriesCompleted As getCategoriesCompletedEventHandler
        
        '''<remarks/>
        Public Event getProductsBySubcategoryCompleted As getProductsBySubcategoryCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getOutletProductList", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getOutletProductList(ByVal customerNumber As String, ByVal userCredential As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Object()
            Dim results() As Object = Me.Invoke("getOutletProductList", New Object() {customerNumber, userCredential})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOutletProductListAsync(ByVal customerNumber As String, ByVal userCredential As String)
            Me.getOutletProductListAsync(customerNumber, userCredential, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOutletProductListAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal userState As Object)
            If (Me.getOutletProductListOperationCompleted Is Nothing) Then
                Me.getOutletProductListOperationCompleted = AddressOf Me.OngetOutletProductListOperationCompleted
            End If
            Me.InvokeAsync("getOutletProductList", New Object() {customerNumber, userCredential}, Me.getOutletProductListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOutletProductListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOutletProductListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOutletProductListCompleted(Me, New getOutletProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getInfo", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getInfo(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal outlet As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> Object()
            Dim results() As Object = Me.Invoke("getInfo", New Object() {customerNumber, userCredential, productNumber, outlet})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInfoAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal outlet As Boolean)
            Me.getInfoAsync(customerNumber, userCredential, productNumber, outlet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInfoAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal outlet As Boolean, ByVal userState As Object)
            If (Me.getInfoOperationCompleted Is Nothing) Then
                Me.getInfoOperationCompleted = AddressOf Me.OngetInfoOperationCompleted
            End If
            Me.InvokeAsync("getInfo", New Object() {customerNumber, userCredential, productNumber, outlet}, Me.getInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInfoCompleted(Me, New getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getLastModified", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getLastModified(ByVal customerNumber As String, ByVal userCredential As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Object()
            Dim results() As Object = Me.Invoke("getLastModified", New Object() {customerNumber, userCredential})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLastModifiedAsync(ByVal customerNumber As String, ByVal userCredential As String)
            Me.getLastModifiedAsync(customerNumber, userCredential, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLastModifiedAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal userState As Object)
            If (Me.getLastModifiedOperationCompleted Is Nothing) Then
                Me.getLastModifiedOperationCompleted = AddressOf Me.OngetLastModifiedOperationCompleted
            End If
            Me.InvokeAsync("getLastModified", New Object() {customerNumber, userCredential}, Me.getLastModifiedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLastModifiedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLastModifiedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLastModifiedCompleted(Me, New getLastModifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getTopSellers", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getTopSellers(ByVal customerNumber As String, ByVal userCredential As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal count As String, ByVal month As String, ByVal year As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Object()
            Dim results() As Object = Me.Invoke("getTopSellers", New Object() {customerNumber, userCredential, count, month, year})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTopSellersAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal count As String, ByVal month As String, ByVal year As String)
            Me.getTopSellersAsync(customerNumber, userCredential, count, month, year, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTopSellersAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal count As String, ByVal month As String, ByVal year As String, ByVal userState As Object)
            If (Me.getTopSellersOperationCompleted Is Nothing) Then
                Me.getTopSellersOperationCompleted = AddressOf Me.OngetTopSellersOperationCompleted
            End If
            Me.InvokeAsync("getTopSellers", New Object() {customerNumber, userCredential, count, month, year}, Me.getTopSellersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTopSellersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTopSellersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTopSellersCompleted(Me, New getTopSellersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getColors", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getColors(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal includeOutlet As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductColorData()
            Dim results() As Object = Me.Invoke("getColors", New Object() {customerNumber, userCredential, productNumber, includeOutlet})
            Return CType(results(0),ProductColorData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getColorsAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal includeOutlet As Boolean)
            Me.getColorsAsync(customerNumber, userCredential, productNumber, includeOutlet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getColorsAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal includeOutlet As Boolean, ByVal userState As Object)
            If (Me.getColorsOperationCompleted Is Nothing) Then
                Me.getColorsOperationCompleted = AddressOf Me.OngetColorsOperationCompleted
            End If
            Me.InvokeAsync("getColors", New Object() {customerNumber, userCredential, productNumber, includeOutlet}, Me.getColorsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetColorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getColorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getColorsCompleted(Me, New getColorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getSetupCharges", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getSetupCharges(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductSetupData()
            Dim results() As Object = Me.Invoke("getSetupCharges", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),ProductSetupData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSetupChargesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.getSetupChargesAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSetupChargesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.getSetupChargesOperationCompleted Is Nothing) Then
                Me.getSetupChargesOperationCompleted = AddressOf Me.OngetSetupChargesOperationCompleted
            End If
            Me.InvokeAsync("getSetupCharges", New Object() {customerNumber, userCredential, productNumber}, Me.getSetupChargesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSetupChargesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSetupChargesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSetupChargesCompleted(Me, New getSetupChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getImages", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getImages(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductImageResult
            Dim results() As Object = Me.Invoke("getImages", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),ProductImageResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getImagesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.getImagesAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getImagesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.getImagesOperationCompleted Is Nothing) Then
                Me.getImagesOperationCompleted = AddressOf Me.OngetImagesOperationCompleted
            End If
            Me.InvokeAsync("getImages", New Object() {customerNumber, userCredential, productNumber}, Me.getImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getImagesCompleted(Me, New getImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductDataCM", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductDataCM(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String) As <System.Xml.Serialization.SoapElementAttribute("return")> CMProductDataResult()
            Dim results() As Object = Me.Invoke("getProductDataCM", New Object() {customerNumber, userCredential, productNumbers})
            Return CType(results(0),CMProductDataResult())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductDataCMAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String)
            Me.getProductDataCMAsync(customerNumber, userCredential, productNumbers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductDataCMAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String, ByVal userState As Object)
            If (Me.getProductDataCMOperationCompleted Is Nothing) Then
                Me.getProductDataCMOperationCompleted = AddressOf Me.OngetProductDataCMOperationCompleted
            End If
            Me.InvokeAsync("getProductDataCM", New Object() {customerNumber, userCredential, productNumbers}, Me.getProductDataCMOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductDataCMOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductDataCMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductDataCMCompleted(Me, New getProductDataCMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getInfoMulti", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getInfoMulti(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String, ByVal outlet As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> Object()
            Dim results() As Object = Me.Invoke("getInfoMulti", New Object() {customerNumber, userCredential, productNumbers, outlet})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInfoMultiAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String, ByVal outlet As Boolean)
            Me.getInfoMultiAsync(customerNumber, userCredential, productNumbers, outlet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInfoMultiAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumbers() As String, ByVal outlet As Boolean, ByVal userState As Object)
            If (Me.getInfoMultiOperationCompleted Is Nothing) Then
                Me.getInfoMultiOperationCompleted = AddressOf Me.OngetInfoMultiOperationCompleted
            End If
            Me.InvokeAsync("getInfoMulti", New Object() {customerNumber, userCredential, productNumbers, outlet}, Me.getInfoMultiOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInfoMultiOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInfoMultiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInfoMultiCompleted(Me, New getInfoMultiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductSizes", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductSizes(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
            Dim results() As Object = Me.Invoke("getProductSizes", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductSizesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.getProductSizesAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductSizesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.getProductSizesOperationCompleted Is Nothing) Then
                Me.getProductSizesOperationCompleted = AddressOf Me.OngetProductSizesOperationCompleted
            End If
            Me.InvokeAsync("getProductSizes", New Object() {customerNumber, userCredential, productNumber}, Me.getProductSizesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductSizesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductSizesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductSizesCompleted(Me, New getProductSizesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductPackingData", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductPackingData(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> RawProductPackingSoap
            Dim results() As Object = Me.Invoke("getProductPackingData", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),RawProductPackingSoap)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductPackingDataAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.getProductPackingDataAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductPackingDataAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.getProductPackingDataOperationCompleted Is Nothing) Then
                Me.getProductPackingDataOperationCompleted = AddressOf Me.OngetProductPackingDataOperationCompleted
            End If
            Me.InvokeAsync("getProductPackingData", New Object() {customerNumber, userCredential, productNumber}, Me.getProductPackingDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductPackingDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductPackingDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductPackingDataCompleted(Me, New getProductPackingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductArtTemplates", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductArtTemplates(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String()
            Dim results() As Object = Me.Invoke("getProductArtTemplates", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductArtTemplatesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.getProductArtTemplatesAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductArtTemplatesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.getProductArtTemplatesOperationCompleted Is Nothing) Then
                Me.getProductArtTemplatesOperationCompleted = AddressOf Me.OngetProductArtTemplatesOperationCompleted
            End If
            Me.InvokeAsync("getProductArtTemplates", New Object() {customerNumber, userCredential, productNumber}, Me.getProductArtTemplatesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductArtTemplatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductArtTemplatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductArtTemplatesCompleted(Me, New getProductArtTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getActiveProducts", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getActiveProducts(ByVal customerNumber As String, ByVal userCredential As String, ByVal includeOutletAndCustom As Boolean) As <System.Xml.Serialization.SoapElementAttribute("return")> ActiveProduct()
            Dim results() As Object = Me.Invoke("getActiveProducts", New Object() {customerNumber, userCredential, includeOutletAndCustom})
            Return CType(results(0),ActiveProduct())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getActiveProductsAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal includeOutletAndCustom As Boolean)
            Me.getActiveProductsAsync(customerNumber, userCredential, includeOutletAndCustom, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getActiveProductsAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal includeOutletAndCustom As Boolean, ByVal userState As Object)
            If (Me.getActiveProductsOperationCompleted Is Nothing) Then
                Me.getActiveProductsOperationCompleted = AddressOf Me.OngetActiveProductsOperationCompleted
            End If
            Me.InvokeAsync("getActiveProducts", New Object() {customerNumber, userCredential, includeOutletAndCustom}, Me.getActiveProductsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetActiveProductsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getActiveProductsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getActiveProductsCompleted(Me, New getActiveProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#isProductRush", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function isProductRush(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ProductRush
            Dim results() As Object = Me.Invoke("isProductRush", New Object() {customerNumber, userCredential, productNumber})
            Return CType(results(0),ProductRush)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isProductRushAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String)
            Me.isProductRushAsync(customerNumber, userCredential, productNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isProductRushAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal productNumber As String, ByVal userState As Object)
            If (Me.isProductRushOperationCompleted Is Nothing) Then
                Me.isProductRushOperationCompleted = AddressOf Me.OnisProductRushOperationCompleted
            End If
            Me.InvokeAsync("isProductRush", New Object() {customerNumber, userCredential, productNumber}, Me.isProductRushOperationCompleted, userState)
        End Sub
        
        Private Sub OnisProductRushOperationCompleted(ByVal arg As Object)
            If (Not (Me.isProductRushCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isProductRushCompleted(Me, New isProductRushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductsDeactivated", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductsDeactivated(ByVal customerNumber As String, ByVal userCredential As String) As <System.Xml.Serialization.SoapElementAttribute("return")> DeactivatedProduct()
            Dim results() As Object = Me.Invoke("getProductsDeactivated", New Object() {customerNumber, userCredential})
            Return CType(results(0),DeactivatedProduct())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductsDeactivatedAsync(ByVal customerNumber As String, ByVal userCredential As String)
            Me.getProductsDeactivatedAsync(customerNumber, userCredential, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductsDeactivatedAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal userState As Object)
            If (Me.getProductsDeactivatedOperationCompleted Is Nothing) Then
                Me.getProductsDeactivatedOperationCompleted = AddressOf Me.OngetProductsDeactivatedOperationCompleted
            End If
            Me.InvokeAsync("getProductsDeactivated", New Object() {customerNumber, userCredential}, Me.getProductsDeactivatedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductsDeactivatedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductsDeactivatedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductsDeactivatedCompleted(Me, New getProductsDeactivatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getCategories", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getCategories(ByVal customerNumber As String, ByVal userCredential As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Category()
            Dim results() As Object = Me.Invoke("getCategories", New Object() {customerNumber, userCredential})
            Return CType(results(0),Category())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCategoriesAsync(ByVal customerNumber As String, ByVal userCredential As String)
            Me.getCategoriesAsync(customerNumber, userCredential, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCategoriesAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal userState As Object)
            If (Me.getCategoriesOperationCompleted Is Nothing) Then
                Me.getCategoriesOperationCompleted = AddressOf Me.OngetCategoriesOperationCompleted
            End If
            Me.InvokeAsync("getCategories", New Object() {customerNumber, userCredential}, Me.getCategoriesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCategoriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCategoriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCategoriesCompleted(Me, New getCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ProductControllerwsdl#getProductsBySubcategory", RequestNamespace:="urn:ProductControllerwsdl", ResponseNamespace:="urn:ProductControllerwsdl")>  _
        Public Function getProductsBySubcategory(ByVal customerNumber As String, ByVal userCredential As String, ByVal subcategoriesIds() As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Subcategory()
            Dim results() As Object = Me.Invoke("getProductsBySubcategory", New Object() {customerNumber, userCredential, subcategoriesIds})
            Return CType(results(0),Subcategory())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProductsBySubcategoryAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal subcategoriesIds() As Integer)
            Me.getProductsBySubcategoryAsync(customerNumber, userCredential, subcategoriesIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProductsBySubcategoryAsync(ByVal customerNumber As String, ByVal userCredential As String, ByVal subcategoriesIds() As Integer, ByVal userState As Object)
            If (Me.getProductsBySubcategoryOperationCompleted Is Nothing) Then
                Me.getProductsBySubcategoryOperationCompleted = AddressOf Me.OngetProductsBySubcategoryOperationCompleted
            End If
            Me.InvokeAsync("getProductsBySubcategory", New Object() {customerNumber, userCredential, subcategoriesIds}, Me.getProductsBySubcategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProductsBySubcategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProductsBySubcategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProductsBySubcategoryCompleted(Me, New getProductsBySubcategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ProductId
        
        Private idField As String
        
        Private nameField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class Subcategory
        
        Private productsField() As ProductId
        
        Private idField As String
        
        Private nameField As String
        
        '''<remarks/>
        Public Property products() As ProductId()
            Get
                Return Me.productsField
            End Get
            Set
                Me.productsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class SubcategoryId
        
        Private idField As String
        
        Private nameField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class Category
        
        Private idField As String
        
        Private nameField As String
        
        Private subcategoriesField() As SubcategoryId
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subcategories() As SubcategoryId()
            Get
                Return Me.subcategoriesField
            End Get
            Set
                Me.subcategoriesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class DeactivatedProduct
        
        Private variationField As String
        
        Private partNumberField As String
        
        Private deactivatedDateField As String
        
        '''<remarks/>
        Public Property variation() As String
            Get
                Return Me.variationField
            End Get
            Set
                Me.variationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property partNumber() As String
            Get
                Return Me.partNumberField
            End Get
            Set
                Me.partNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deactivatedDate() As String
            Get
                Return Me.deactivatedDateField
            End Get
            Set
                Me.deactivatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ProductRush
        
        Private productNumberField As String
        
        Private isRushField As Boolean
        
        '''<remarks/>
        Public Property productNumber() As String
            Get
                Return Me.productNumberField
            End Get
            Set
                Me.productNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isRush() As Boolean
            Get
                Return Me.isRushField
            End Get
            Set
                Me.isRushField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ActiveProduct
        
        Private numberField As String
        
        Private domainField As String
        
        '''<remarks/>
        Public Property number() As String
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domain() As String
            Get
                Return Me.domainField
            End Get
            Set
                Me.domainField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class RawProductPackingSoap
        
        Private productNumberField As String
        
        Private quantityPerBoxField As String
        
        Private weightField As String
        
        Private boxLengthField As String
        
        Private boxWidthField As String
        
        Private boxHeightField As String
        
        '''<remarks/>
        Public Property productNumber() As String
            Get
                Return Me.productNumberField
            End Get
            Set
                Me.productNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property quantityPerBox() As String
            Get
                Return Me.quantityPerBoxField
            End Get
            Set
                Me.quantityPerBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property weight() As String
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property boxLength() As String
            Get
                Return Me.boxLengthField
            End Get
            Set
                Me.boxLengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property boxWidth() As String
            Get
                Return Me.boxWidthField
            End Get
            Set
                Me.boxWidthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property boxHeight() As String
            Get
                Return Me.boxHeightField
            End Get
            Set
                Me.boxHeightField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class CMProductDataResult
        
        Private productField() As Object
        
        Private imprintField As Object
        
        Private setUpChargeField() As Object
        
        Private itemMaterialField As String
        
        Private itemDimensionsField As String
        
        Private itemColorsField() As Object
        
        Private countryOfOriginField As String
        
        Private shipFromZipField As String
        
        Private isHazMatField As Boolean
        
        Private quantityOnHandField() As Object
        
        Private discontinuedField As Boolean
        
        Private lastModifiedField As String
        
        Private expeditedServicesOfferedField As String
        
        Private imagesField() As Object
        
        Private itemWeightField() As Object
        
        Private packageField() As Object
        
        Private pricingField As Object
        
        '''<remarks/>
        Public Property product() As Object()
            Get
                Return Me.productField
            End Get
            Set
                Me.productField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property imprint() As Object
            Get
                Return Me.imprintField
            End Get
            Set
                Me.imprintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property setUpCharge() As Object()
            Get
                Return Me.setUpChargeField
            End Get
            Set
                Me.setUpChargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemMaterial() As String
            Get
                Return Me.itemMaterialField
            End Get
            Set
                Me.itemMaterialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemDimensions() As String
            Get
                Return Me.itemDimensionsField
            End Get
            Set
                Me.itemDimensionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemColors() As Object()
            Get
                Return Me.itemColorsField
            End Get
            Set
                Me.itemColorsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property countryOfOrigin() As String
            Get
                Return Me.countryOfOriginField
            End Get
            Set
                Me.countryOfOriginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shipFromZip() As String
            Get
                Return Me.shipFromZipField
            End Get
            Set
                Me.shipFromZipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isHazMat() As Boolean
            Get
                Return Me.isHazMatField
            End Get
            Set
                Me.isHazMatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property quantityOnHand() As Object()
            Get
                Return Me.quantityOnHandField
            End Get
            Set
                Me.quantityOnHandField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property discontinued() As Boolean
            Get
                Return Me.discontinuedField
            End Get
            Set
                Me.discontinuedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastModified() As String
            Get
                Return Me.lastModifiedField
            End Get
            Set
                Me.lastModifiedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property expeditedServicesOffered() As String
            Get
                Return Me.expeditedServicesOfferedField
            End Get
            Set
                Me.expeditedServicesOfferedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property images() As Object()
            Get
                Return Me.imagesField
            End Get
            Set
                Me.imagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemWeight() As Object()
            Get
                Return Me.itemWeightField
            End Get
            Set
                Me.itemWeightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property package() As Object()
            Get
                Return Me.packageField
            End Get
            Set
                Me.packageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pricing() As Object
            Get
                Return Me.pricingField
            End Get
            Set
                Me.pricingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ProductImageResult
        
        Private allField() As String
        
        Private mainField As String
        
        '''<remarks/>
        Public Property all() As String()
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property main() As String
            Get
                Return Me.mainField
            End Get
            Set
                Me.mainField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ProductSetupData
        
        Private decoration_codeField As String
        
        Private decorationField As String
        
        Private setup_chargeField As String
        
        Private run_chargeField As String
        
        Private extra_color_chargeField As String
        
        Private extra_location_chargeField As String
        
        '''<remarks/>
        Public Property decoration_code() As String
            Get
                Return Me.decoration_codeField
            End Get
            Set
                Me.decoration_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property decoration() As String
            Get
                Return Me.decorationField
            End Get
            Set
                Me.decorationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property setup_charge() As String
            Get
                Return Me.setup_chargeField
            End Get
            Set
                Me.setup_chargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property run_charge() As String
            Get
                Return Me.run_chargeField
            End Get
            Set
                Me.run_chargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property extra_color_charge() As String
            Get
                Return Me.extra_color_chargeField
            End Get
            Set
                Me.extra_color_chargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property extra_location_charge() As String
            Get
                Return Me.extra_location_chargeField
            End Get
            Set
                Me.extra_location_chargeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ProductControllerwsdl")>  _
    Partial Public Class ProductColorData
        
        Private color_idField As String
        
        Private part_numberField As String
        
        Private product_numberField As String
        
        Private colorField As String
        
        Private is_outletField As Boolean
        
        '''<remarks/>
        Public Property color_id() As String
            Get
                Return Me.color_idField
            End Get
            Set
                Me.color_idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property part_number() As String
            Get
                Return Me.part_numberField
            End Get
            Set
                Me.part_numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property product_number() As String
            Get
                Return Me.product_numberField
            End Get
            Set
                Me.product_numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property color() As String
            Get
                Return Me.colorField
            End Get
            Set
                Me.colorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property is_outlet() As Boolean
            Get
                Return Me.is_outletField
            End Get
            Set
                Me.is_outletField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getOutletProductListCompletedEventHandler(ByVal sender As Object, ByVal e As getOutletProductListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOutletProductListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getLastModifiedCompletedEventHandler(ByVal sender As Object, ByVal e As getLastModifiedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLastModifiedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getTopSellersCompletedEventHandler(ByVal sender As Object, ByVal e As getTopSellersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTopSellersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getColorsCompletedEventHandler(ByVal sender As Object, ByVal e As getColorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getColorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProductColorData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProductColorData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getSetupChargesCompletedEventHandler(ByVal sender As Object, ByVal e As getSetupChargesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSetupChargesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProductSetupData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProductSetupData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getImagesCompletedEventHandler(ByVal sender As Object, ByVal e As getImagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getImagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProductImageResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProductImageResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductDataCMCompletedEventHandler(ByVal sender As Object, ByVal e As getProductDataCMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductDataCMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CMProductDataResult()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CMProductDataResult())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getInfoMultiCompletedEventHandler(ByVal sender As Object, ByVal e As getInfoMultiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInfoMultiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductSizesCompletedEventHandler(ByVal sender As Object, ByVal e As getProductSizesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductSizesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductPackingDataCompletedEventHandler(ByVal sender As Object, ByVal e As getProductPackingDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductPackingDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RawProductPackingSoap
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RawProductPackingSoap)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductArtTemplatesCompletedEventHandler(ByVal sender As Object, ByVal e As getProductArtTemplatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductArtTemplatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getActiveProductsCompletedEventHandler(ByVal sender As Object, ByVal e As getActiveProductsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getActiveProductsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ActiveProduct()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ActiveProduct())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub isProductRushCompletedEventHandler(ByVal sender As Object, ByVal e As isProductRushCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isProductRushCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProductRush
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProductRush)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductsDeactivatedCompletedEventHandler(ByVal sender As Object, ByVal e As getProductsDeactivatedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductsDeactivatedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeactivatedProduct()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeactivatedProduct())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getCategoriesCompletedEventHandler(ByVal sender As Object, ByVal e As getCategoriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCategoriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Category()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Category())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub getProductsBySubcategoryCompletedEventHandler(ByVal sender As Object, ByVal e As getProductsBySubcategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProductsBySubcategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Subcategory()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Subcategory())
            End Get
        End Property
    End Class
End Namespace
